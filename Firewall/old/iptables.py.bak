#!/usr/bin/python3


from subprocess import run, run
from interface_ip import *
from config import *



class IPTables:
    def __init__(self):
        Int = Interface()
        self.insideip = Int.InsideIP()
        self.wanip = Int.WanIP()
        self.cChains = ['MALICIOUS', 'WHITELIST', 'BLACKLIST']
        
    def Start(self):
        try:
            self.create_new_chains()
            self.main_forward_set()
            self.main_input_set()
            self.main_output_set()
            self.NAT()
        except Exception as E:
            print(E)
            
    def create_new_chains(self):
        for chain in self.cChains:
            run('sudo iptables -N {}'.format(chain), shell=True, check=True)
            run('sudo iptables -A {} -j RETURN'.format(chain)), shell=True)
        
    def main_forward_set(self):
        run(['sudo', 'iptables', '-P', 'FORWARD', 'DROP'])
        if (EXTERNALDNS == True):        
            run(['sudo', 'iptables', '-A', 'FORWARD', '-p', 'udp', '--dport', '53', '-j', 'REJECT'])
            run(['sudo', 'iptables', '-A', 'FORWARD', '-p', 'tcp', '--dport', '53', '-j', 'REJECT'])
        elif (EXTERNALDNS == False): 
            for chain in self.cChains:
                run(['sudo', 'iptables', '-A', 'FORWARD', '-p', 'udp', '--sport', '53', '-j', chain])
            for chain in self.cChains:
                run(['sudo', 'iptables', '-A', 'FORWARD', '-p', 'udp', '--dport', '53', '-j', chain])
 
        run(['sudo', 'iptables', '-A', 'FORWARD', '-i', INIFACE, '-j', 'ACCEPT'])
        run(['sudo', 'iptables', '-A', 'FORWARD', '-m', 'conntrack', '--ctstate', 'RELATED,ESTABLISHED', '-j', 'ACCEPT'])
        
    def main_input_set(self):
        run(['sudo', 'iptables', '-P', 'INPUT', 'DROP'])
        for chain in self.cChains:
            run(['sudo', 'iptables', '-A', 'INPUT', '-p', 'udp', '--dport', '53', '-j', chain])
        run(['sudo', 'iptables', '-A', 'INPUT', '-i', INIFACE, '-p', 'icmp', '--icmp-type', 'any', '-j', 'ACCEPT'])
        run(['sudo', 'iptables', '-A', 'INPUT', '-m', 'conntrack', '--ctstate', 'RELATED,ESTABLISHED', '-j', 'ACCEPT'])

        run(['sudo', 'iptables', '-A', 'INPUT', '-i', INIFACE, '-p', 'udp', '--dport', '53', '-j', 'ACCEPT'])
        run(['sudo', 'iptables', '-A', 'INPUT', '-i', INIFACE, '-p', 'tcp', '--dport', '443', '-j', 'ACCEPT'])
        
    def main_output_set(self):
        run(['sudo', 'iptables', '-P', 'OUTPUT', 'DROP'])
        run(['sudo', 'iptables', '-A', 'OUTPUT', '-d', '{}'.format(LOCALNET), '-j', 'ACCEPT'])
        run(['sudo', 'iptables', '-A', 'OUTPUT', '-s', self.wanip, '-j', 'MALICIOUS'])        
        run(['sudo', 'iptables', '-A', 'OUTPUT', '-s', self.wanip, '-j', 'ACCEPT'])
        #put entry for list location#
        
    def NAT(self):
        run(['sudo', 'iptables', '-t', 'nat', '-A', 'POSTROUTING', '-o', WANIFACE, '-j', 'MASQUERADE'])
